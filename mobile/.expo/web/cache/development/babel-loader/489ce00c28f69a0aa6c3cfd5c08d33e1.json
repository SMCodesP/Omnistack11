{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\samue\\\\Documents\\\\Omnistack  #11\\\\point\\\\mobile\\\\src\\\\pages\\\\Incidents\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles\";\nimport logoImg from \"../../assets/logo.png\";\nimport api from \"../../services/api\";\nexport default (function () {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  function loadIncidents() {\n    var request;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && incidents.length === total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('incidents', {\n              params: {\n                page: page\n              }\n            }));\n\n          case 7:\n            request = _context.sent;\n            setIncidents([].concat(_toConsumableArray(incidents), _toConsumableArray(request.data)));\n            console.log(request.headers);\n            setTotal(request.headers['X-Total-Count']);\n            setPage(page + 1);\n            setLoading(false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadIncidents();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }\n  }, total, \" casos\"))), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Bem-vindo!\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Escolha um dos casos abaixo e salve o dia.\"), React.createElement(FlatList, {\n    data: incidents,\n    style: styles.incidentsList,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    onEndReached: loadIncidents,\n    onEndReachedThreshold: 0.2,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, incident.name), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, \"CASO:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"VALOR:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return navigateToDetail(incident);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/samue/Documents/Omnistack  #11/point/mobile/src/pages/Incidents/index.js"],"names":["React","useEffect","useState","Feather","useNavigation","styles","logoImg","api","incidents","setIncidents","total","setTotal","page","setPage","loading","setLoading","navigation","navigateToDetail","incident","navigate","loadIncidents","length","get","params","request","data","console","log","headers","container","header","headerText","headerTextBold","title","description","incidentsList","String","id","item","incidentProperty","incidentValue","name","Intl","NumberFormat","style","currency","format","value","detailsButton","detailsButtonText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { View, FlatList, Text, Image, TouchableOpacity } from 'react-native';\r\n\r\nimport styles from './styles';\r\n\r\nimport logoImg from '../../assets/logo.png';\r\nimport api from '../../services/api';\r\n\r\nexport default () => {\r\n  const [incidents, setIncidents] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  function navigateToDetail(incident) {\r\n    navigation.navigate('Detail', { incident });\r\n  }\r\n\r\n  async function loadIncidents() {\r\n    if(loading) return;\r\n    if(total > 0 && incidents.length === total) return;\r\n\r\n    setLoading(true);\r\n    const request = await api.get('incidents', {\r\n      params: { page }\r\n    });\r\n\r\n    setIncidents([...incidents, ...request.data]);\r\n    console.log(request.headers);\r\n    setTotal(request.headers['X-Total-Count']);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadIncidents();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Image source={logoImg} />\r\n        <Text style={styles.headerText}>\r\n          Total de <Text style={styles.headerTextBold}>{total} casos</Text>\r\n        </Text>\r\n      </View>\r\n      \r\n      <Text style={styles.title}>Bem-vindo!</Text>\r\n      <Text style={styles.description}>Escolha um dos casos abaixo e salve o dia.</Text>\r\n\r\n      <FlatList\r\n        data={incidents}\r\n        style={styles.incidentsList}\r\n        keyExtractor={incident => String(incident.id)}\r\n        onEndReached={loadIncidents}\r\n        onEndReachedThreshold={0.2}\r\n        // showsVerticalScrollIndicator={false}\r\n        renderItem={({ item: incident }) => (\r\n          <View style={styles.incident}>\r\n            <Text style={styles.incidentProperty}>ONG:</Text>\r\n            <Text style={styles.incidentValue}>{incident.name}</Text>\r\n            \r\n            <Text style={styles.incidentProperty}>CASO:</Text>\r\n            <Text style={styles.incidentValue}>{incident.title}</Text>\r\n            \r\n            <Text style={styles.incidentProperty}>VALOR:</Text>\r\n            <Text style={styles.incidentValue}>\r\n              {Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(incident.value)}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={styles.detailsButton}\r\n              onPress={() => navigateToDetail(incident)}\r\n            >\r\n              <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\r\n              <Feather name=\"arrow-right\" size={16} color=\"#E02041\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}